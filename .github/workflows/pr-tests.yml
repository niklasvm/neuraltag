name: PR Tests
# PR tests are currently disabled
on:
  # pull_request:
  #   branches: [ master ]
  workflow_dispatch: {}

jobs:
  application-tests:
    name: PR Tests
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv venv
          uv sync
      
      - name: Run lint tests
        run: |
            source .venv/bin/activate
            make lint_tests
      
      - name: Run unit tests
        run: |
            source .venv/bin/activate
            make unit_tests

      # - name: Add coverage to PR
      #   id: jacoco
      #   uses: orgoro/coverage@v3.2
      #   with:
      #       coverageFile: coverage.xml
      #       token: ${{ secrets.GITHUB_TOKEN }}
  
  # terraform-tests:
  #   name: Terraform Tests
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #   env:
  #     GCP_PROJECT_ID: ${{secrets.GCP_PROJECT_ID}}
  #     GCP_SA_KEY: ${{secrets.GCP_SA_KEY}}
  #     GCP_REGION: ${{secrets.GCP_REGION}}
  #   steps:
  #   - uses: actions/checkout@v4
  #   - uses: 'google-github-actions/auth@v2'
  #     with:
  #       credentials_json: ${{secrets.GCP_CREDENTIALS}}
      
  #   - name: Setup Terraform
  #     uses: hashicorp/setup-terraform@v3
    
  #   - name: Terraform Init
  #     run: terraform -chdir=terraform init
  #   - name: Terraform Validate
  #     run: terraform -chdir=terraform validate
  #   - name: Terraform Plan
  #     run: |
  #       terraform -chdir=terraform plan \
  #         -var "gcp_project_id=$GCP_PROJECT_ID" \
  #         -var "gcp_sa_key=$GCP_SA_KEY" \
  #         -var "gcp_region=$GCP_REGION" \
  #         -var "image_tag=${{ github.sha }}"

  # docker_build_only:
  #   name: Build docker image
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install uv
  #     - name: Build the Docker image
  #       run: |
  #         uv pip compile pyproject.toml -o requirements.txt
  #         docker build . -t ghcr.io/${{ github.repository }}:latest

  # docker_build_armv7:
  #   name: Build docker image for armv7
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
      
  #     - name: Install Rust toolchain
  #       uses: actions-rust-lang/setup-rust-toolchain@v1.11.0
  #       with:
  #           toolchain: stable
      
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install uv
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #     - name: Build the Docker image
  #       run: |
  #         uv run python cicd/deploy/modify_pyproject_toml.py
  #         docker buildx build --platform linux/arm/v7 . -t ghcr.io/${{ github.repository }}:latest